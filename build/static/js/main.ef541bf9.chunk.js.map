{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsActions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContacts","INITIAL_STATE","ContactForm","useState","contact","setContact","dispatch","useDispatch","handleChange","target","value","reset","onSubmit","e","preventDefault","className","s","form","form__label","type","form__input","pattern","title","required","onChange","form__button","ContactList","contacts","useSelector","filter","normalizedFilter","toLowerCase","includes","getFilteredContacts","items","map","contacts__item","contacts__button","onClick","onDeleteContact","Filter","state","filter__input","App","createReducer","find","el","alert","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ef541bf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1nE6a\",\"contacts__item\":\"ContactList_contacts__item__2VeqK\",\"contacts__button\":\"ContactList_contacts__button__21K_9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2N9AF\",\"filter__input\":\"Filter_filter__input__iFBVN\"};","import {createAction} from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', ({ name, number }) => ({   \n    payload: {\n        id: uuidv4(),\n        name,\n        number,\n    },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst filterContacts = createAction('contacts/filter');\n\nconst contactsActions = {addContact, deleteContact, filterContacts};\n\nexport default contactsActions;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nfunction ContactForm() {\n  const [contact, setContact] = useState(INITIAL_STATE);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setContact({\n      ...contact,\n      [name]: value\n    })\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(contactsActions.addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setContact(INITIAL_STATE);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.form__label}>\n        Name\n        <input\n          type=\"text\"\n          className={s.form__input}\n          name=\"name\"\n          value={contact.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.form__label}>\n        Number\n        <input\n          type=\"tel\"\n          className={s.form__input}\n          name=\"number\"\n          value={contact.number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.form__button}>Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  target: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './ContactList.module.css';\n\nconst getFilteredContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n}\n\nfunction ContactList() { \n  const contacts = useSelector(({contacts: {items, filter}}) => getFilteredContacts(items, filter));\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => (dispatch(contactsActions.deleteContact(id)));\n\n  return (\n    <ul className={s.contacts}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contacts__item}>\n          {name}: {number}\n          <button type=\"button\" className={s.contacts__button} onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const value = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => dispatch(contactsActions.filterContacts(e.target.value));\n\n  return (\n    <>\n      <p className={s.filter}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        className={s.filter__input}\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={onFilterChange}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux';\nimport {createReducer} from '@reduxjs/toolkit';\nimport contactsActions from './contacts-actions';\n\nconst DEFAULT_CONTACTS = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\n];\n\nconst items = createReducer(DEFAULT_CONTACTS, {\n    [contactsActions.addContact]: (state, {payload}) => (\n        (state.find(el => el.name === payload.name)) \n        ? alert(`${payload.name} is already in contacts`) \n        : [payload, ...state]\n    ),\n    [contactsActions.deleteContact]: (state, {payload}) => state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n    [contactsActions.filterContacts]: (_, {payload}) => payload,\n});\n\nexport default combineReducers({\n    items,\n    filter,\n});\n","import {configureStore} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n    key: 'contacts',\n    storage,\n    blacklist: ['filter']\n  }\n\nconst store = configureStore({\n    reducer: {\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\n    },\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }).concat(logger),\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport {store, persistor};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport {store, persistor} from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>        \n        <App />        \n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__jfvFw\",\"form__input\":\"ContactForm_form__input__1JUZH\",\"form__label\":\"ContactForm_form__label__1U3NX\",\"form__button\":\"ContactForm_form__button__DL4r8\"};"],"sourceRoot":""}